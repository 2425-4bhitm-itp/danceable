name: Danceable CI/CD Pipeline
run-name: Full Stack Build Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-frontend-and-backend:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
          cache-dependency-path: 'code/backend/pom.xml'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'code/frontend/package.json'

      - name: Build Project
        run: |
          chmod +x build.sh
          ./build.sh
        working-directory: code

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download backend artefacts
        uses: actions/download-artifact@v4
        with:
          name: backend-artifact
          path: code/backend/target
      - name: Log in to the Container registry
        uses: docker/login-action@3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          cd code/backend
          mvn package -DskipTests
          docker build -t backend:latest -f docker/Dockerfile .
          docker tag backend:latest ghcr.io/2425-4bhitm-itp/backend:latest
          docker push ghcr.io/2425-4bhitm-itp/backend:latest

#      - name: Build Docker image
#        run: |
#          echo "Building Docker image..."
#          cd code/backend
#          mvn package -DskipTests
#      - name: Build Docker image
#        run: |
#          echo "Building Docker image..."
#          cd code/backend
#          docker build --file docker/Dockerfile -t ghcr.io/${{ github.repository_owner }}/backend:latest .

#      - name: Push Docker image
#        run: |
#          echo "Pushing Docker image..."
#          docker push ghcr.io/${{ github.repository_owner }}/backend:latest

#    containerize:
#      needs: test-backend
#      runs-on: ubuntu-latest
#      steps:

