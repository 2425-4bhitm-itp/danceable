name: Danceable CI/CD Pipeline
run-name: Full Stack Build Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
          cache-dependency-path: 'code/backend/pom.xml'

      - name: Build Project
        run: |
          chmod +x build.sh
          ./build.sh
        working-directory: code

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Backend Docker Build & Push
      - name: Build and Push Backend Docker image
        run: |
          echo "Building Backend Docker image..."
          cd code/backend
          mvn package -DskipTests
          docker buildx build --push --platform linux/amd64,linux/arm64 -t ghcr.io/2425-4bhitm-itp/backend:latest -f docker/Dockerfile .
          echo "Pushing Backend Docker image..."

  build-ml:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'code/ml/requirements.txt'

      - name: Ensure pip cache directory exists
        run: mkdir -p ~/.cache/pip

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push ML Docker image
        run: |
          echo "Building ML Docker image..."
          cd code/ml
          docker build -t ml:latest -f docker/Dockerfile .
          echo "Pushing ML Docker image..."
          docker tag ml:latest ghcr.io/2425-4bhitm-itp/ml:latest
          docker push ghcr.io/2425-4bhitm-itp/ml:latest
